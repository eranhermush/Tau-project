#ifndef TAU_PROJECT_SAE_GROUPS_H
#define TAU_PROJECT_SAE_GROUPS_H

#include <NTL/ZZ.h>


namespace FFC{
	enum class GROUP_NAMES{GROUP22 = 0, GROUP23 = 1, GROUP24 = 2};

	/* a FFC group is defined by (p, G, q)
			p, q are primes
			G < p
			G's order mod p is q
			thr group is generated by G*/
	struct group{
		NTL::ZZ p;
		NTL::ZZ G;
		NTL::ZZ q;

		group(const NTL::ZZ& p0, const NTL::ZZ& G0, const NTL::ZZ& q0): p(p0), G(G0), q(q0) {}
	};

	static group GROUPS[3] = {
		group(NTL::conv<NTL::ZZ>("124325339146889384540494091085456630009856882741872806181731279018491820800119460022367403769795008250021191767583423221479185609066059226301250167164084041279837566626881119772675984258163062926954046545485368458404445166682380071370274810671501916789361956272226105723317679562001235501455748016154805420913"),
			NTL::conv<NTL::ZZ>("115740200527109164239523414760926155534485715860090261532154107313946218459149402375178179458041461723723231563839316251515439564315555249353831328479173170684416728715378198172203100328308536292821245983596065287318698169565702979765910089654821728828592422299160041156491980943427556153020487552135890973413"),
			NTL::conv<NTL::ZZ>("1399252811935680595399801714158014275474696840019")),
		group(NTL::conv<NTL::ZZ>("21847359589888208475506724917162265063571401985325370367631361781114029653025956815157605328190411141044160689815741319381196532979871500038979862309158738250945118554961626824152307536605872616502884288878062467052777605227846709781850614792748458838951342204812601838112937805371782600380106020522884406452823818824455683982042882928183431194593189171431066371138510252979648513553078762584596147427456837289623008879364829477705183636149304120998948654278133874026711188494311770883514889363351380064520413459602696141353949407971810071848354127868725934057811052285511726070951954828625761984797831079801857828431"),
			NTL::conv<NTL::ZZ>("21744646143243216057020228551156208752703942887207308868664445275548674736620508732925764357515199547303283870847514971207187185912917434889899462163342116463504651187567271577773370136574456671482796328194698430314464307239426297609039182878000113673163760381575629928593038563536234958563213385495445541911168414741250494418615704883548296728080545795859843320405072472266753448906714605637308642468422898558630812487636188819677130134963833040948411243908028200183454403067866539747291394732970142401544187137624428138444276721310399530477238861596789940953323090393313600101710523922727140772179016720953265564666"),
			NTL::conv<NTL::ZZ>("13491513086924420379699774282445616590110876328163828635542747312619")),
		group(NTL::conv<NTL::ZZ>("17125458317614137930196041979257577826408832324037508573393292981642667139747621778802438775238728592968344613589379932348475613503476932163166973813218698343816463289144185362912602522540494983090531497232965829536524507269848825658311420299335922295709743267508322525966773950394919257576842038771632742044142471053509850123605883815857162666917775193496157372656195558305727009891276006514000409365877218171388319923896309377791762590614311849642961380224851940460421710449368927252974870395873936387909672274883295377481008150475878590270591798350563488168080923804611822387520198054002990623911454389104774092183"),
			NTL::conv<NTL::ZZ>("8041367327046189302693984665026706374844608289874374425728797669509435881459140662650215832833471328470334064628508692231999401840332046192569287351991689963279656892562484773278584208040987631569628520464069532361274047374444344996651832979378318849943741662110395995778429270819222431610927356005913836932462099770076239554042855287138026806960470277326229482818003962004453764400995790974042663675692120758726145869061236443893509136147942414445551848162391468541444355707785697825741856849161233887307017428371823608125699892904960841221593344499088996021883972185241854777608212592397013510086894908468466292313"),
			NTL::conv<NTL::ZZ>("63762351364972653564641699529205510489263266834182771617563631363277932854227")),
	};
}

namespace ECC{
	enum class GROUP_NAMES{GROUP19 = 0, GROUP20 = 1, GROUP21 = 2};

	/* a ECC group is the group of the elliptic curve y^2 = x^3 + ax + b (mod p)
			where p is a prime and a, b < p*/
	struct group{
		NTL::ZZ p;
		NTL::ZZ a;
		NTL::ZZ b;

		group(const NTL::ZZ& p0, const NTL::ZZ& a0, const NTL::ZZ& b0): p(p0), a(a0), b(b0) {}
	};

	static group GROUPS[3] = {
		group(NTL::conv<NTL::ZZ>("115792089210356248762697446949407573530086143415290314195533631308867097853951"),
			NTL::conv<NTL::ZZ>("115792089210356248762697446949407573530086143415290314195533631308867097853948"),
			NTL::conv<NTL::ZZ>("41058363725152142129326129780047268409114441015993725554835256314039467401291")),
		group(NTL::conv<NTL::ZZ>("39402006196394479212279040100143613805079739270465446667948293404245721771496870329047266088258938001861606973112319"),
			NTL::conv<NTL::ZZ>("39402006196394479212279040100143613805079739270465446667948293404245721771496870329047266088258938001861606973112316"),
			NTL::conv<NTL::ZZ>("27580193559959705877849011840389048093056905856361568521428707301988689241309860865136260764883745107765439761230575")),
		group(NTL::conv<NTL::ZZ>("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151"),
			NTL::conv<NTL::ZZ>("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057148"),
			NTL::conv<NTL::ZZ>("1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984")),
	};
}

#endif